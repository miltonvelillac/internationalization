/**
 * Functions shared between the schematics.
 **/
import { OptionsAfterSetup } from './options-after-setup';
/**
 * Check syntax of language code.
 * (pattern copied from xliffmerge)
 * Must be compatible with XML Schema type xsd:language.
 * Pattern: [a-zA-Z]{1,8}((-|_)[a-zA-Z0-9]{1,8})*
 * @param lang the language code
 * @return true, if valid, false otherwise
 */
export declare function isValidLanguageSyntax(lang: string): boolean;
export declare function fullExtractScript(options: OptionsAfterSetup): string;
/**
 * returns the build configuration to be set.
 */
export declare function buildConfigurationForLanguage(options: OptionsAfterSetup, language: string): any;
/**
 * returns the serve configuration to be set.
 */
export declare function serveConfigurationForLanguage(options: OptionsAfterSetup, language: string): any;
/**
 * Add a start script.
 * Script will be named 'start-<language>' or 'start-<project>-<language'.
 * @param options options options containing project etc.
 * @param language language to be added.
 */
export declare function addStartScriptToPackageJson(options: OptionsAfterSetup, language: string): (host: import("../../../../../../node_modules/@angular-devkit/schematics/src/tree/interface").Tree, context: import("../../../../../../node_modules/@angular-devkit/schematics/src/engine/interface").TypedSchematicContext<{}, {}>) => import("../../../../../../node_modules/@angular-devkit/schematics/src/tree/interface").Tree;
/**
 * Add the build and serve configuration for a given language to angular.json.
 * @param options options containing project etc.
 * @param language the language to be added.
 */
export declare function addLanguageConfigurationToProject(options: OptionsAfterSetup, language: string): (host: import("../../../../../../node_modules/@angular-devkit/schematics/src/tree/interface").Tree, context: import("../../../../../../node_modules/@angular-devkit/schematics/src/engine/interface").TypedSchematicContext<{}, {}>) => import("../../../../../../node_modules/@angular-devkit/schematics/src/tree/interface").Tree;

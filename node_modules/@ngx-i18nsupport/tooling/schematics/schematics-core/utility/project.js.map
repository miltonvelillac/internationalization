{"version":3,"file":"project.js","sourceRoot":"","sources":["../../../../../projects/tooling/src/schematics/schematics-core/utility/project.ts"],"names":[],"mappings":";;AAAA,qCAAwC;AAQxC,oBACI,IAAU,EACV,OAAoE;IAEpE,MAAM,SAAS,GAAG,qBAAY,CAAC,IAAI,CAAC,CAAC;IAErC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QAClB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD;IAED,OAAO,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C,CAAC;AAXD,gCAWC;AAED,wBACI,IAAU,EACV,OAAoE;IAEpE,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAE1C,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACjC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAClE;IAED,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;QAC5B,MAAM,cAAc,GAChB,OAAO,CAAC,WAAW,KAAK,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;QAE1D,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,cAAc,EAAE,CAAC;KAC5E;IAED,OAAO,OAAO,CAAC,IAAI,CAAC;AACxB,CAAC;AAlBD,wCAkBC;AAED,eACI,IAAU,EACV,OAAoE;IAEpE,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAE1C,OAAO,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC;AAC7C,CAAC;AAPD,sBAOC","sourcesContent":["import { getWorkspace } from './config';\r\nimport { Tree } from '@angular-devkit/schematics';\r\n\r\nexport interface WorkspaceProject {\r\n    root: string;\r\n    projectType: string;\r\n}\r\n\r\nexport function getProject(\r\n    host: Tree,\r\n    options: { project?: string | undefined; path?: string | undefined }\r\n): WorkspaceProject {\r\n    const workspace = getWorkspace(host);\r\n\r\n    if (!options.project) {\r\n        options.project = Object.keys(workspace.projects)[0];\r\n    }\r\n\r\n    return workspace.projects[options.project];\r\n}\r\n\r\nexport function getProjectPath(\r\n    host: Tree,\r\n    options: { project?: string | undefined; path?: string | undefined }\r\n) {\r\n    const project = getProject(host, options);\r\n\r\n    if (project.root.substr(-1) === '/') {\r\n        project.root = project.root.substr(0, project.root.length - 1);\r\n    }\r\n\r\n    if (options.path === undefined) {\r\n        const projectDirName =\r\n            project.projectType === 'application' ? 'app' : 'lib';\r\n\r\n        return `${project.root ? `/${project.root}` : ''}/src/${projectDirName}`;\r\n    }\r\n\r\n    return options.path;\r\n}\r\n\r\nexport function isLib(\r\n    host: Tree,\r\n    options: { project?: string | undefined; path?: string | undefined }\r\n) {\r\n    const project = getProject(host, options);\r\n\r\n    return project.projectType === 'library';\r\n}\r\n"]}
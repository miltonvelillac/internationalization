{"version":3,"file":"strings.js","sourceRoot":"","sources":["../../../../../projects/tooling/src/schematics/schematics-core/utility/strings.ts"],"names":[],"mappings":";;AAAA;;;;;;GAMG;AACH,MAAM,uBAAuB,GAAG,OAAO,CAAC;AACxC,MAAM,wBAAwB,GAAG,mBAAmB,CAAC;AACrD,MAAM,sBAAsB,GAAG,mBAAmB,CAAC;AACnD,MAAM,0BAA0B,GAAG,oBAAoB,CAAC;AACxD,MAAM,0BAA0B,GAAG,QAAQ,CAAC;AAE5C;;;;;;;;;GASG;AACH,oBAA2B,GAAW;IAClC,OAAO,GAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AACxE,CAAC;AAFD,gCAEC;AAED;;;;;;;;GAQG;AACH,mBAA0B,GAAY;IAClC,OAAO,UAAU,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;AACvE,CAAC;AAFD,8BAEC;AAED;;;;;;;;;GASG;AACH,kBAAyB,GAAW;IAChC,OAAO,GAAG;SACL,OAAO,CACJ,sBAAsB,EACtB,CAAC,MAAc,EAAE,UAAkB,EAAE,GAAW,EAAE,EAAE;QAChD,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACxC,CAAC,CACJ;SACA,OAAO,CAAC,UAAU,EAAE,CAAC,KAAa,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AACrE,CAAC;AATD,4BASC;AAED;;;;;;;;GAQG;AACH,kBAAyB,GAAW;IAChC,OAAO,GAAG;SACL,KAAK,CAAC,GAAG,CAAC;SACV,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;SACvC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC;AALD,4BAKC;AAED;;;;;;;;;GASG;AACH,oBAA2B,GAAW;IAClC,OAAO,GAAG;SACL,OAAO,CAAC,0BAA0B,EAAE,OAAO,CAAC;SAC5C,OAAO,CAAC,0BAA0B,EAAE,GAAG,CAAC;SACxC,WAAW,EAAE,CAAC;AACvB,CAAC;AALD,gCAKC;AAED;;;;;;;;GAQG;AACH,oBAA2B,GAAW;IAClC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC;AAFD,gCAEC;AAED,eAAsB,IAAY,EAAE,KAAyB;IACzD,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAC7C,CAAC;AAFD,sBAEC;AAED,qBACI,KAA0B,EAC1B,IAAyB,EACzB,IAAY,EACZ,IAAY;IAEZ,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;QAChB,OAAO,SAAS,IAAI,IAAI,IAAI,GAAG,CAAC;KACnC;IAED,OAAO,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AACxC,CAAC;AAXD,kCAWC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst STRING_DASHERIZE_REGEXP = /[ _]/g;\r\nconst STRING_DECAMELIZE_REGEXP = /([a-z\\d])([A-Z])/g;\r\nconst STRING_CAMELIZE_REGEXP = /(-|_|\\.|\\s)+(.)?/g;\r\nconst STRING_UNDERSCORE_REGEXP_1 = /([a-z\\d])([A-Z]+)/g;\r\nconst STRING_UNDERSCORE_REGEXP_2 = /-|\\s+/g;\r\n\r\n/**\r\n * Converts a camelized string into all lower case separated by underscores.\r\n *\r\n ```javascript\r\n decamelize('innerHTML');         // 'inner_html'\r\n decamelize('action_name');       // 'action_name'\r\n decamelize('css-class-name');    // 'css-class-name'\r\n decamelize('my favorite items'); // 'my favorite items'\r\n ```\r\n */\r\nexport function decamelize(str: string): string {\r\n    return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();\r\n}\r\n\r\n/**\r\n Replaces underscores, spaces, or camelCase with dashes.\r\n ```javascript\r\n dasherize('innerHTML');         // 'inner-html'\r\n dasherize('action_name');       // 'action-name'\r\n dasherize('css-class-name');    // 'css-class-name'\r\n dasherize('my favorite items'); // 'my-favorite-items'\r\n ```\r\n */\r\nexport function dasherize(str?: string): string {\r\n    return decamelize(str || '').replace(STRING_DASHERIZE_REGEXP, '-');\r\n}\r\n\r\n/**\r\n Returns the lowerCamelCase form of a string.\r\n ```javascript\r\n camelize('innerHTML');          // 'innerHTML'\r\n camelize('action_name');        // 'actionName'\r\n camelize('css-class-name');     // 'cssClassName'\r\n camelize('my favorite items');  // 'myFavoriteItems'\r\n camelize('My Favorite Items');  // 'myFavoriteItems'\r\n ```\r\n */\r\nexport function camelize(str: string): string {\r\n    return str\r\n        .replace(\r\n            STRING_CAMELIZE_REGEXP,\r\n            (_match: string, _separator: string, chr: string) => {\r\n                return chr ? chr.toUpperCase() : '';\r\n            }\r\n        )\r\n        .replace(/^([A-Z])/, (match: string) => match.toLowerCase());\r\n}\r\n\r\n/**\r\n Returns the UpperCamelCase form of a string.\r\n ```javascript\r\n 'innerHTML'.classify();          // 'InnerHTML'\r\n 'action_name'.classify();        // 'ActionName'\r\n 'css-class-name'.classify();     // 'CssClassName'\r\n 'my favorite items'.classify();  // 'MyFavoriteItems'\r\n ```\r\n */\r\nexport function classify(str: string): string {\r\n    return str\r\n        .split('.')\r\n        .map(part => capitalize(camelize(part)))\r\n        .join('.');\r\n}\r\n\r\n/**\r\n More general than decamelize. Returns the lower\\_case\\_and\\_underscored\r\n form of a string.\r\n ```javascript\r\n 'innerHTML'.underscore();          // 'inner_html'\r\n 'action_name'.underscore();        // 'action_name'\r\n 'css-class-name'.underscore();     // 'css_class_name'\r\n 'my favorite items'.underscore();  // 'my_favorite_items'\r\n ```\r\n */\r\nexport function underscore(str: string): string {\r\n    return str\r\n        .replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2')\r\n        .replace(STRING_UNDERSCORE_REGEXP_2, '_')\r\n        .toLowerCase();\r\n}\r\n\r\n/**\r\n Returns the Capitalized form of a string\r\n ```javascript\r\n 'innerHTML'.capitalize()         // 'InnerHTML'\r\n 'action_name'.capitalize()       // 'Action_name'\r\n 'css-class-name'.capitalize()    // 'Css-class-name'\r\n 'my favorite items'.capitalize() // 'My favorite items'\r\n ```\r\n */\r\nexport function capitalize(str: string): string {\r\n    return str.charAt(0).toUpperCase() + str.substr(1);\r\n}\r\n\r\nexport function group(name: string, group: string | undefined) {\r\n    return group ? `${group}/${name}` : name;\r\n}\r\n\r\nexport function featurePath(\r\n    group: boolean | undefined,\r\n    flat: boolean | undefined,\r\n    path: string,\r\n    name: string\r\n) {\r\n    if (group && !flat) {\r\n        return `../../${path}/${name}/`;\r\n    }\r\n\r\n    return group ? `../${path}/` : './';\r\n}\r\n"]}